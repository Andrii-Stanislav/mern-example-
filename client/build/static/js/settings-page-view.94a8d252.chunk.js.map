{"version":3,"sources":["Components/svg/Pen.js","Components/InputPhone/InputPhone.js","Containers/MainContainer/MainContainer.js","services/validation.js","Containers/MainContainer/MainContainer.module.css","Components/SetingsInput/SetingsInput.module.css","Components/ConfirmCancelButtons/ConfirmCancelButtons.module.css","Views/SettingsAccount/SettingsAccount.module.css","Components/PaymentBilling/PaymentBilling.module.css","Components/PaymentCard/PaymentCard.module.css","Views/SettingsReskin/SettingsReskin.module.css","Views/SettingsPage/SettingsPage.module.css","Components/SetingsInput/SetingsInput.js","Components/ConfirmCancelButtons/ConfirmCancelButtons.js","Components/svg/PhotoCamera.js","Views/SettingsAccount/SettingsAccount.js","Components/PaymentBilling/PaymentBilling.js","Components/PaymentCard/PaymentCard.js","Views/SettingsPayment/SettingsPayment.js","Views/SettingsReskin/SettingsReskin.js","Components/svg/Arrow.js","Views/SettingsPage/SettingsPage.js"],"names":["Pen","onClick","fill","height","width","viewBox","xmlns","d","InputPhone","value","onChange","name","disabled","inputClass","buttonClass","placeholder","country","inputProps","required","autoFocus","MainContainer","children","className","styles","container","validate","isEmail","email","result","test","isFullName","isNickName","isPassword","password","length","message","search","module","exports","SetingsInput","type","editMode","input","maxLength","ConfirmCancelButtons","confirm","cancel","buttonsBox","buttonCancel","buttonConfirm","PhotoCamera","AccountSettings","useSelector","authSelectors","phone","useState","userName","setUserName","prevName","useRef","userPhone","setUserPhone","prevPhone","userEmail","setUserEmail","prevEmail","useEffect","setEditMode","modalPlanShow","setPlanModalShow","changeInputValue","target","dispatch","useDispatch","settingsContainer","subTitle","userInfoBlock","logoBox","UserLogo","userLogo","editLogo","inputBox","userInfoLabel","editButton","current","authOperations","editUserInfo","Name","Phone","Email","setAuthError","planInfoBlock","userInfoText","nickName","id","userInfoPlan","plan","upgradeBtn","Button","icon","Upgrade","bgColor","getPlans","Modal","size","show","onHide","UpgradePlan","onCloseClick","PaymentBilling","billingName","setName","billingEmail","setEmail","city","setCity","prevCity","state","setState","prevState","street","setStreet","prevStreet","postalCode","postCode","setPostCode","prevPostCode","main","updateStripeInfo","postal_code","line1","PaymentCard","stripe","useStripe","elements","useElements","cardBrand","cardCountry","cardNumberLast","cardExpiryMonth","cardExpiryYear","editCard","setEditCard","cardComplete","setCardComplete","error","setError","loading","setLoading","heandleConfirmEditCard","event","a","preventDefault","getElement","focus","createPaymentMethod","card","CardElement","payload","console","log","updatePaymentInfo","paymentId","paymentMethod","cardInfo","editForm","onSubmit","StripeCardField","externalError","stripePromise","loadStripe","process","StripePaymentCard","props","SettingsPayment","SettingsReskin","elMessengerChat","elMessengerGroup","elMessengerUnlockUrl","supportLink","setSupportLink","prevSupportLink","officialGroupLink","setOfficialGroupLink","prevOfficialGroupLink","unlockUrl","setUnlockUrl","prevUnlockUrl","updateReskinInfo","ElmessengerChatSupport","ElmessengerGroupSupport","ElmessengerUnlockUrl","Arrow","SvgBox","SettingsPage","history","useHistory","getSettingsInfo","push","routes","partnerArea","goBackBtn","title","buttonsBlock","to","settingsAccount","buttonControl","activeClassName","activeButton","settingsPayment","settingsReskin","path","component"],"mappings":"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","file":"static/js/settings-page-view.94a8d252.chunk.js","sourcesContent":["import React from 'react';\n\nimport SvgBox from './SvgBox';\n\nexport default function Pen({ onClick, fill }) {\n  return (\n    <SvgBox onClick={onClick} height=\"16px\">\n      <svg\n        width=\"17\"\n        height=\"16\"\n        viewBox=\"0 0 17 16\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M3.5332 12.6875C3.57227 12.6875 3.61133 12.6836 3.65039 12.6777L6.93555 12.1016C6.97461 12.0938 7.01172 12.0762 7.03906 12.0469L15.3184 3.76758C15.3365 3.74951 15.3508 3.72805 15.3606 3.70442C15.3704 3.68079 15.3755 3.65546 15.3755 3.62988C15.3755 3.6043 15.3704 3.57897 15.3606 3.55535C15.3508 3.53172 15.3365 3.51026 15.3184 3.49219L12.0723 0.244141C12.0352 0.207031 11.9863 0.1875 11.9336 0.1875C11.8809 0.1875 11.832 0.207031 11.7949 0.244141L3.51562 8.52344C3.48633 8.55273 3.46875 8.58789 3.46094 8.62695L2.88477 11.9121C2.86577 12.0167 2.87255 12.1244 2.90454 12.2258C2.93654 12.3273 2.99276 12.4193 3.06836 12.4941C3.19727 12.6191 3.35938 12.6875 3.5332 12.6875ZM4.84961 9.28125L11.9336 2.19922L13.3652 3.63086L6.28125 10.7129L4.54492 11.0195L4.84961 9.28125ZM15.6875 14.3281H1.3125C0.966797 14.3281 0.6875 14.6074 0.6875 14.9531V15.6562C0.6875 15.7422 0.757812 15.8125 0.84375 15.8125H16.1562C16.2422 15.8125 16.3125 15.7422 16.3125 15.6562V14.9531C16.3125 14.6074 16.0332 14.3281 15.6875 14.3281Z\"\n          fill={fill || '#004AAD'}\n        />\n      </svg>\n    </SvgBox>\n  );\n}\n","import React from 'react'\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/bootstrap.css'\nimport './InputPhone.css'\n\nfunction InputPhone({ value, onChange, name, disabled }) {\n  return (\n    <PhoneInput\n      inputClass=\"custom-phone-input\"\n      buttonClass=\"custom-phone-dropdown\"\n      placeholder=\"+1201 XXX - XX - XX \"\n      name={name}\n      country={'us'}\n      value={value}\n      onChange={onChange}\n      disabled={disabled}\n      // isValid={value => {\n      //   console.log('isValid')\n      //   console.log('value: ', value)\n      //   if (value.length < 11) {\n      //     return 'Invalid value: ' + value + ', '\n      //   } else {\n      //     return true\n      //   }\n      // }}\n      inputProps={{\n        name: 'phone',\n        required: true,\n        autoFocus: true,\n      }}\n    />\n  )\n}\n\nexport default InputPhone\n","import React from 'react';\n\nimport styles from './MainContainer.module.css';\n\nfunction MainContainer({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nexport default MainContainer;\n","const isEmail = email => {\n  var pattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n  return { result: pattern.test(email) }\n}\n\nconst isFullName = name => {\n  // const pattern = /^(?![A-Z .'-]+$)(?![a-z .'-]+$)[a-zA-Z .'-]+$/\n  const pattern = /[a-z A-Z '-][^0-9]/g\n  return { result: pattern.test(name) }\n}\n\nconst isNickName = name => {\n  // const pattern = /^(?![A-Z.'-]+$)(?![a-z.'-]+$)[a-zA-Z.'-]+$/\n  const pattern = /^[a-zA-Z]\\w*$/\n  return { result: pattern.test(name) }\n}\n\nconst isPassword = password => {\n  if (password.length < 8) {\n    return {\n      result: false,\n      message: 'Your password must be at least 8 characters',\n    }\n  }\n  if (password.search(/[a-z]/i) < 0) {\n    return {\n      result: false,\n      message: 'Your password must contain at least one letter.',\n    }\n  }\n\n  if (password.search(/[0-9]/) < 0) {\n    return {\n      result: false,\n      message: 'Your password must contain at least one digit.',\n    }\n  }\n\n  return { result: true }\n}\n\nconst validate = {\n  isEmail,\n  isFullName,\n  isNickName,\n  isPassword,\n}\n\nexport default validate\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainContainer_container__3A52l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SetingsInput_input__SUrxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBox\":\"ConfirmCancelButtons_buttonsBox__2EsyC\",\"buttonConfirm\":\"ConfirmCancelButtons_buttonConfirm__WZv0N\",\"buttonCancel\":\"ConfirmCancelButtons_buttonCancel__pQTb2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsContainer\":\"SettingsAccount_settingsContainer__33ibR\",\"subTitle\":\"SettingsAccount_subTitle__3RR-g\",\"logoBox\":\"SettingsAccount_logoBox__20DTj\",\"editLogo\":\"SettingsAccount_editLogo__26dzq\",\"userInfoBlock\":\"SettingsAccount_userInfoBlock__3eDFW\",\"planInfoBlock\":\"SettingsAccount_planInfoBlock__a2CE_\",\"editButton\":\"SettingsAccount_editButton__2gS0f\",\"upgradeBtn\":\"SettingsAccount_upgradeBtn__3Xv6p\",\"inputBox\":\"SettingsAccount_inputBox__2lYdk\",\"userInfoLabel\":\"SettingsAccount_userInfoLabel__1MCuS\",\"userInfoText\":\"SettingsAccount_userInfoText__tIfGz\",\"userInfoPlan\":\"SettingsAccount_userInfoPlan__2f-0d\",\"userPhone\":\"SettingsAccount_userPhone__21D4v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PaymentBilling_main__HXuVb\",\"subTitle\":\"PaymentBilling_subTitle__2h0PN\",\"container\":\"PaymentBilling_container__3w0-L\",\"editButton\":\"PaymentBilling_editButton__1xYDp\",\"inputBox\":\"PaymentBilling_inputBox__1mw7T\",\"userInfoLabel\":\"PaymentBilling_userInfoLabel__24o08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PaymentCard_main__2NyxZ\",\"subTitle\":\"PaymentCard_subTitle__2e8qL\",\"container\":\"PaymentCard_container__2jkWu\",\"editButton\":\"PaymentCard_editButton__5q2i_\",\"inputBox\":\"PaymentCard_inputBox__SJvPX\",\"userInfoLabel\":\"PaymentCard_userInfoLabel__Cl6mn\",\"cardInfo\":\"PaymentCard_cardInfo__KdTvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subTitle\":\"SettingsReskin_subTitle__3i9Au\",\"container\":\"SettingsReskin_container__1iOZi\",\"editButton\":\"SettingsReskin_editButton__1x205\",\"inputBox\":\"SettingsReskin_inputBox__2-OGB\",\"userInfoLabel\":\"SettingsReskin_userInfoLabel__1fqH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"goBackBtn\":\"SettingsPage_goBackBtn__HyRlu\",\"title\":\"SettingsPage_title__1dycE\",\"buttonsBlock\":\"SettingsPage_buttonsBlock__3NGJM\",\"buttonControl\":\"SettingsPage_buttonControl__1LkrI\",\"activeButton\":\"SettingsPage_activeButton__1vNlE\"};","import React from 'react';\n\nimport styles from './SetingsInput.module.css';\n\nfunction SetingsInput({ value, onChange, type, editMode, name, placeholder }) {\n  return (\n    <input\n      className={styles.input}\n      type={type || 'text'}\n      name={name}\n      value={value}\n      onChange={onChange}\n      maxLength=\"26\"\n      disabled={!editMode}\n      placeholder={placeholder}\n    />\n  );\n}\n\nexport default SetingsInput;\n","import React from 'react';\n\nimport styles from './ConfirmCancelButtons.module.css';\n\nfunction ConfirmCancelButtons({ confirm, cancel }) {\n  return (\n    <div className={styles.buttonsBox}>\n      <div onClick={cancel} className={styles.buttonCancel}>\n        Cancel\n      </div>\n      <div onClick={confirm} className={styles.buttonConfirm}>\n        Confirm\n      </div>\n    </div>\n  );\n}\n\nexport default ConfirmCancelButtons;\n","import React from 'react';\n\nexport default function PhotoCamera() {\n  return (\n    <svg\n      width=\"20\"\n      height=\"19\"\n      viewBox=\"0 0 20 19\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M2.5 3.33325V0.833252H4.16667V3.33325H6.66667V4.99992H4.16667V7.49992H2.5V4.99992H0V3.33325H2.5ZM5 8.33325V5.83325H7.5V3.33325H13.3333L14.8583 4.99992H17.5C18.4167 4.99992 19.1667 5.74992 19.1667 6.66658V16.6666C19.1667 17.5833 18.4167 18.3333 17.5 18.3333H4.16667C3.25 18.3333 2.5 17.5833 2.5 16.6666V8.33325H5ZM10.8333 15.8333C13.1333 15.8333 15 13.9666 15 11.6666C15 9.36658 13.1333 7.49992 10.8333 7.49992C8.53333 7.49992 6.66667 9.36658 6.66667 11.6666C6.66667 13.9666 8.53333 15.8333 10.8333 15.8333ZM8.16667 11.6666C8.16667 13.1416 9.35833 14.3333 10.8333 14.3333C12.3083 14.3333 13.5 13.1416 13.5 11.6666C13.5 10.1916 12.3083 8.99992 10.8333 8.99992C9.35833 8.99992 8.16667 10.1916 8.16667 11.6666Z\"\n        fill=\"#004AAD\"\n      />\n    </svg>\n  );\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport UserLogo from '../../Components/UserLogo'\nimport SetingsInput from '../../Components/SetingsInput'\nimport Button from '../../Components/Button'\nimport Modal from '../../Containers/Modal'\nimport UpgradePlan from '../../Components/UpgradePlan'\nimport ConfirmCancelButtons from '../../Components/ConfirmCancelButtons'\nimport InputPhone from '../../Components/InputPhone'\n\nimport PhotoCamera from '../../Components/svg/PhotoCamera'\nimport Pen from '../../Components/svg/Pen'\nimport Upgrade from '../../Components/svg/Upgrade'\n\nimport styles from './SettingsAccount.module.css'\nimport authSelectors from '../../redux/auth/auth-selectors'\nimport authOperations from '../../redux/auth/auth-operations'\nimport { setAuthError } from '../../redux/auth/auth-actions'\n\nimport validate from '../../services/validation'\nimport userLogo from '../../images/default-user.png'\n\nfunction AccountSettings() {\n  const name = useSelector(authSelectors.name)\n  const phone = useSelector(authSelectors.phone)\n  const email = useSelector(authSelectors.email)\n\n  const [userName, setUserName] = useState('')\n  const prevName = useRef('')\n  const [userPhone, setUserPhone] = useState('')\n  const prevPhone = useRef('')\n  const [userEmail, setUserEmail] = useState()\n  const prevEmail = useRef('')\n\n  useEffect(() => {\n    setUserName(name)\n  }, [name])\n  useEffect(() => {\n    setUserPhone(phone)\n  }, [phone])\n  useEffect(() => {\n    setUserEmail(email)\n  }, [email])\n\n  const [editMode, setEditMode] = useState(false)\n  const [modalPlanShow, setPlanModalShow] = useState(false)\n\n  const changeInputValue = ({ target }) => {\n    switch (target.name) {\n      case 'userName':\n        setUserName(target.value)\n        break\n      case 'userEmail':\n        setUserEmail(target.value)\n        break\n      default:\n    }\n  }\n\n  const heandleEditPersonalInfo = () => {\n    prevName.current = userName\n    prevPhone.current = userPhone\n    prevEmail.current = userEmail\n    setEditMode(true)\n  }\n\n  const cancelPersonalInfo = () => {\n    setUserName(prevName.current)\n    setUserPhone(prevPhone.current)\n    setUserEmail(prevEmail.current)\n\n    setEditMode(false)\n  }\n\n  const dispatch = useDispatch()\n  const confirmPersonalInfo = () => {\n    const { result: fullNameValid } = validate.isFullName(userName)\n    if (!fullNameValid) {\n      return dispatch(setAuthError('Full Name not valid!'))\n    }\n\n    const { result: emailValid } = validate.isEmail(userEmail)\n    if (!emailValid) {\n      return dispatch(setAuthError('Email not valid!'))\n    }\n\n    setEditMode(false)\n    dispatch(\n      authOperations.editUserInfo({\n        Name: userName,\n        Phone: userPhone,\n        Email: userEmail,\n      })\n    )\n  }\n\n  const upgradeUserPlan = () => {\n    dispatch(authOperations.getPlans())\n    setPlanModalShow(true)\n  }\n\n  return (\n    <>\n      <div className={styles.settingsContainer}>\n        <div className={styles.subTitle}>Personal Information</div>\n        <div className={styles.userInfoBlock}>\n          <div className={styles.logoBox}>\n            <UserLogo userLogo={userLogo} width=\"100px\" />\n            <div className={styles.editLogo}>\n              <PhotoCamera />\n            </div>\n          </div>\n          <div>\n            <div className={styles.inputBox}>\n              <div className={styles.userInfoLabel}>Full name</div>\n              <SetingsInput\n                name=\"userName\"\n                value={userName}\n                onChange={changeInputValue}\n                editMode={editMode}\n              />\n            </div>\n\n            <div className={styles.inputBox}>\n              <div className={styles.userInfoLabel}>Email</div>\n              <SetingsInput\n                name=\"userEmail\"\n                type=\"email\"\n                value={userEmail}\n                onChange={changeInputValue}\n                editMode={editMode}\n              />\n            </div>\n\n            <div className={styles.inputBox}>\n              <div className={styles.userInfoLabel}>Phone number</div>\n              <InputPhone\n                value={userPhone}\n                onChange={phone => setUserPhone(phone)}\n                disabled={!editMode}\n              />\n            </div>\n\n            {!editMode && (\n              <div\n                className={styles.editButton}\n                onClick={heandleEditPersonalInfo}\n              >\n                <Pen />\n                <span>Edit</span>\n              </div>\n            )}\n            {editMode && (\n              <div className={styles.editButton}>\n                <ConfirmCancelButtons\n                  confirm={confirmPersonalInfo}\n                  cancel={cancelPersonalInfo}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className={styles.subTitle}>User Information</div>\n        <div className={styles.userInfoBlock}>\n          <div className={styles.planInfoBlock}>\n            <div className={styles.inputBox}>\n              <div className={styles.userInfoLabel}>User name </div>\n              <div className={styles.userInfoText}>\n                {useSelector(authSelectors.nickName)}\n              </div>\n            </div>\n            <div className={styles.inputBox}>\n              <div className={styles.userInfoLabel}>ID</div>\n              <div className={styles.userInfoText}>\n                {useSelector(authSelectors.id)}\n              </div>\n            </div>\n            <div className={styles.inputBox}>\n              <div className={styles.userInfoLabel}>Plan</div>\n              <div className={styles.userInfoPlan}>\n                {useSelector(authSelectors.plan)}\n              </div>\n            </div>\n          </div>\n          <div className={styles.upgradeBtn}>\n            <Button\n              icon={<Upgrade />}\n              bgColor=\"darkBlue\"\n              onClick={upgradeUserPlan}\n            >\n              Upgrade\n            </Button>\n          </div>\n        </div>\n      </div>\n      <Modal\n        size=\"lg\"\n        show={modalPlanShow}\n        onHide={() => setPlanModalShow(false)}\n      >\n        <UpgradePlan onCloseClick={() => setPlanModalShow(false)} />\n      </Modal>\n    </>\n  )\n}\n\nexport default AccountSettings\n","import React, { useState, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport SetingsInput from '../../Components/SetingsInput'\nimport ConfirmCancelButtons from '../ConfirmCancelButtons'\n\nimport Pen from '../../Components/svg/Pen'\n\nimport styles from './PaymentBilling.module.css'\nimport authSelectors from '../../redux/auth/auth-selectors'\nimport authOperations from '../../redux/auth/auth-operations'\n\nfunction PaymentBilling() {\n  const [editMode, setEditMode] = useState(false)\n\n  const [name, setName] = useState(useSelector(authSelectors.billingName))\n  const prevName = useRef('')\n  const [email, setEmail] = useState(useSelector(authSelectors.billingEmail))\n  const prevEmail = useRef('')\n  //\n  const [city, setCity] = useState(useSelector(authSelectors.city))\n  const prevCity = useRef('')\n  const [state, setState] = useState(useSelector(authSelectors.state))\n  const prevState = useRef('')\n  const [street, setStreet] = useState(useSelector(authSelectors.street))\n  const prevStreet = useRef('')\n  const [postCode, setPostCode] = useState(\n    useSelector(authSelectors.postalCode)\n  )\n  const prevPostCode = useRef('')\n\n  const changeInputValue = ({ target }) => {\n    switch (target.name) {\n      case 'name':\n        setName(target.value)\n        break\n      case 'email':\n        setEmail(target.value)\n        break\n      case 'city':\n        setCity(target.value)\n        break\n      case 'state':\n        setState(target.value)\n        break\n      case 'street':\n        setStreet(target.value)\n        break\n      case 'postCode':\n        setPostCode(target.value)\n        break\n      default:\n    }\n  }\n\n  const heandleEditInfo = () => {\n    prevName.current = name\n    prevEmail.current = email\n    prevCity.current = city\n    prevState.current = state\n    prevStreet.current = street\n    prevPostCode.current = postCode\n\n    setEditMode(true)\n  }\n\n  const cancelEditInfo = () => {\n    setName(prevName.current)\n    setEmail(prevEmail.current)\n    setCity(prevCity.current)\n    setState(prevState.current)\n    setStreet(prevStreet.current)\n    setPostCode(prevPostCode.current)\n\n    setEditMode(false)\n  }\n\n  const dispatch = useDispatch()\n\n  const confirmEditInfo = () => {\n    setEditMode(false)\n    dispatch(\n      authOperations.updateStripeInfo({\n        name,\n        email,\n        city,\n        state,\n        postal_code: postCode,\n        line1: street,\n      })\n    )\n  }\n\n  return (\n    <div className={styles.main}>\n      <div className={styles.subTitle}>Billing Details</div>\n\n      <div className={styles.container}>\n        {editMode && (\n          <div className={styles.editButton}>\n            <ConfirmCancelButtons\n              confirm={confirmEditInfo}\n              cancel={cancelEditInfo}\n            />\n          </div>\n        )}\n        {!editMode && (\n          <div className={styles.editButton} onClick={heandleEditInfo}>\n            <Pen />\n            <span>Edit</span>\n          </div>\n        )}\n\n        <div className={styles.inputBox}>\n          <div className={styles.userInfoLabel}>Name</div>\n          <SetingsInput\n            name=\"name\"\n            value={name}\n            onChange={changeInputValue}\n            editMode={editMode}\n            placeholder=\"No Data\"\n          />\n        </div>\n\n        <div className={styles.inputBox}>\n          <div className={styles.userInfoLabel}>Email</div>\n          <SetingsInput\n            name=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={changeInputValue}\n            editMode={editMode}\n            placeholder=\"No Data\"\n          />\n        </div>\n\n        <div className={styles.inputBox}>\n          <div className={styles.userInfoLabel}>City</div>\n          <SetingsInput\n            name=\"city\"\n            value={city}\n            onChange={changeInputValue}\n            editMode={editMode}\n            placeholder=\"No Data\"\n          />\n        </div>\n\n        <div className={styles.inputBox}>\n          <div className={styles.userInfoLabel}>State</div>\n          <SetingsInput\n            name=\"state\"\n            value={state}\n            onChange={changeInputValue}\n            editMode={editMode}\n            placeholder=\"No Data\"\n          />\n        </div>\n\n        <div className={styles.inputBox}>\n          <div className={styles.userInfoLabel}>Street</div>\n          <SetingsInput\n            name=\"street\"\n            value={street}\n            onChange={changeInputValue}\n            editMode={editMode}\n            placeholder=\"No Data\"\n          />\n        </div>\n\n        <div className={styles.inputBox}>\n          <div className={styles.userInfoLabel}>Postal code</div>\n          <SetingsInput\n            name=\"postCode\"\n            value={postCode}\n            onChange={changeInputValue}\n            editMode={editMode}\n            placeholder=\"No Data\"\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PaymentBilling\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { loadStripe } from '@stripe/stripe-js'\nimport {\n  Elements,\n  CardElement,\n  useElements,\n  useStripe,\n} from '@stripe/react-stripe-js'\n\nimport ConfirmCancelButtons from '../ConfirmCancelButtons'\nimport StripeCardField from '../StripeCardField'\n\nimport Pen from '../svg/Pen'\n\nimport styles from './PaymentCard.module.css'\nimport authSelectors from '../../redux/auth/auth-selectors'\nimport authOperations from '../../redux/auth/auth-operations'\n\nfunction PaymentCard() {\n  const stripe = useStripe()\n  const elements = useElements()\n\n  const cardBrand = useSelector(authSelectors.cardBrand)\n  const cardCountry = useSelector(authSelectors.cardCountry)\n  const cardNumberLast = useSelector(authSelectors.cardNumberLast)\n  const cardExpiryMonth = useSelector(authSelectors.cardExpiryMonth)\n  const cardExpiryYear = useSelector(authSelectors.cardExpiryYear)\n\n  const [editCard, setEditCard] = useState(false)\n  const [cardComplete, setCardComplete] = useState(false)\n  const [error, setError] = useState(null)\n\n  const [loading, setLoading] = useState(false)\n\n  const heandleEditCard = () => {\n    setEditCard(true)\n  }\n\n  const heandleCancelEditCard = () => {\n    setEditCard(false)\n  }\n\n  const dispatch = useDispatch()\n  const heandleConfirmEditCard = async event => {\n    event.preventDefault()\n    if (!stripe || !elements) {\n      return\n    }\n\n    if (!cardComplete) {\n      elements.getElement('card').focus()\n      return\n    }\n\n    setLoading(true)\n    const payload = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    })\n    setLoading(false)\n\n    console.log('paymentMethod: ', payload)\n\n    if (payload.error) {\n      setError(payload.error)\n      return\n    }\n\n    dispatch(\n      authOperations.updatePaymentInfo({ paymentId: payload.paymentMethod.id })\n    )\n    setEditCard(false)\n  }\n\n  return (\n    <div className={styles.main}>\n      <div className={styles.subTitle}>Card Details</div>\n\n      <div className={styles.container}>\n        {editCard && !loading && (\n          <div className={styles.editButton}>\n            <ConfirmCancelButtons\n              confirm={heandleConfirmEditCard}\n              cancel={heandleCancelEditCard}\n            />\n          </div>\n        )}\n        {!editCard && (\n          <div className={styles.editButton} onClick={heandleEditCard}>\n            <Pen fill=\"#252020\" />\n            <span>Edit</span>\n          </div>\n        )}\n\n        {!editCard && (\n          <>\n            <div className={styles.inputBox}>\n              <div className={styles.userInfoLabel}>Brand:</div>\n              <div className={styles.cardInfo}>{cardBrand}</div>\n            </div>\n            <div className={styles.inputBox}>\n              <div className={styles.userInfoLabel}>Country:</div>\n              <div className={styles.cardInfo}>{cardCountry}</div>\n            </div>\n            <div className={styles.inputBox}>\n              <div className={styles.userInfoLabel}>Card</div>\n              <div className={styles.cardInfo}>\n                **** **** **** {cardNumberLast}\n              </div>\n            </div>\n            <div className={styles.inputBox}>\n              <div className={styles.userInfoLabel}>Card Expiry:</div>\n              <div className={styles.cardInfo}>\n                {cardExpiryMonth}/{cardExpiryYear}\n              </div>\n            </div>\n          </>\n        )}\n\n        {loading && <p>Loading...</p>}\n\n        {editCard && (\n          <form className={styles.editForm} onSubmit={heandleConfirmEditCard}>\n            <StripeCardField\n              externalError={error}\n              setCardComplete={event => setCardComplete(event)}\n            />\n          </form>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLIC_SECRET)\n\nexport default function StripePaymentCard({ ...props }) {\n  return (\n    <Elements stripe={stripePromise}>\n      <PaymentCard {...props} />\n    </Elements>\n  )\n}\n","import React from 'react'\n\nimport PaymentBilling from '../../Components/PaymentBilling'\nimport PaymentCard from '../../Components/PaymentCard'\n\n// import styles from './SettingsPayment.module.css'\n\nfunction SettingsPayment() {\n  return (\n    <>\n      <PaymentBilling />\n      <PaymentCard />\n    </>\n  )\n}\n\nexport default SettingsPayment\n","import React, { useState, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport SetingsInput from '../../Components/SetingsInput'\nimport ConfirmCancelButtons from '../../Components/ConfirmCancelButtons'\n\nimport Pen from '../../Components/svg/Pen'\n\nimport styles from './SettingsReskin.module.css'\nimport authSelectors from '../../redux/auth/auth-selectors'\nimport authOperations from '../../redux/auth/auth-operations'\n\nfunction SettingsReskin() {\n  const elMessengerChat = useSelector(authSelectors.elMessengerChat)\n  const elMessengerGroup = useSelector(authSelectors.elMessengerGroup)\n  const elMessengerUnlockUrl = useSelector(authSelectors.elMessengerUnlockUrl)\n\n  const [supportLink, setSupportLink] = useState(elMessengerChat)\n  const prevSupportLink = useRef('')\n  const [officialGroupLink, setOfficialGroupLink] = useState(elMessengerGroup)\n  const prevOfficialGroupLink = useRef('')\n  const [unlockUrl, setUnlockUrl] = useState(elMessengerUnlockUrl)\n  const prevUnlockUrl = useRef('')\n\n  const [editMode, setEditMode] = useState(false)\n\n  const changeInputValue = ({ target }) => {\n    switch (target.name) {\n      case 'supportLink':\n        setSupportLink(target.value)\n        break\n      case 'officialGroupLink':\n        setOfficialGroupLink(target.value)\n        break\n      case 'unlockUrl':\n        setUnlockUrl(target.value)\n        break\n      default:\n    }\n  }\n\n  const heandleEditPersonalInfo = () => {\n    prevSupportLink.current = supportLink\n    prevOfficialGroupLink.current = officialGroupLink\n    prevUnlockUrl.current = unlockUrl\n    setEditMode(true)\n  }\n\n  const cancelPersonalInfo = () => {\n    setSupportLink(prevSupportLink.current)\n    setOfficialGroupLink(prevOfficialGroupLink.current)\n    setUnlockUrl(prevUnlockUrl.current)\n\n    setEditMode(false)\n  }\n\n  const dispatch = useDispatch()\n\n  const confirmPersonalInfo = () => {\n    dispatch(\n      authOperations.updateReskinInfo({\n        ElmessengerChatSupport: supportLink,\n        ElmessengerGroupSupport: officialGroupLink,\n        ElmessengerUnlockUrl: unlockUrl,\n      })\n    )\n    setEditMode(false)\n  }\n\n  return (\n    <>\n      <div className={styles.subTitle}>ElMessenger Reskin</div>\n\n      <div className={styles.container}>\n        <div className={styles.inputBox}>\n          <div className={styles.userInfoLabel}>Chat Support Link</div>\n          <SetingsInput\n            name=\"supportLink\"\n            value={supportLink}\n            onChange={changeInputValue}\n            editMode={editMode}\n            placeholder=\"No Data\"\n          />\n        </div>\n        <div className={styles.inputBox}>\n          <div className={styles.userInfoLabel}>\n            Official Group Support Link\n          </div>\n          <SetingsInput\n            name=\"officialGroupLink\"\n            value={officialGroupLink}\n            onChange={changeInputValue}\n            editMode={editMode}\n            placeholder=\"No Data\"\n          />\n        </div>\n        <div className={styles.inputBox}>\n          <div className={styles.userInfoLabel}>ELMessenger 'Unlock' URL</div>\n          <SetingsInput\n            name=\"unlockUrl\"\n            value={unlockUrl}\n            onChange={changeInputValue}\n            editMode={editMode}\n            placeholder=\"No Data\"\n          />\n        </div>\n        {!editMode && (\n          <div className={styles.editButton} onClick={heandleEditPersonalInfo}>\n            <Pen />\n            <span>Edit</span>\n          </div>\n        )}\n        {editMode && (\n          <div className={styles.editButton}>\n            <ConfirmCancelButtons\n              confirm={confirmPersonalInfo}\n              cancel={cancelPersonalInfo}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default SettingsReskin\n","import React from 'react';\n\nimport SvgBox from './SvgBox';\n\nfunction Arrow() {\n  return (\n    <SvgBox height=\"16px\">\n      <svg\n        width=\"8\"\n        height=\"16\"\n        viewBox=\"0 0 8 16\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M0.999724 8.00003C0.999268 7.76638 1.08064 7.53994 1.22972 7.36003L6.22972 1.36003C6.39946 1.15581 6.64337 1.02739 6.9078 1.00301C7.17223 0.978631 7.43551 1.06029 7.63972 1.23003C7.84394 1.39977 7.97237 1.64368 7.99675 1.90811C8.02112 2.17253 7.93946 2.43581 7.76972 2.64003L3.28972 8.00003L7.60972 13.36C7.69279 13.4623 7.75482 13.58 7.79225 13.7064C7.82969 13.8327 7.84178 13.9652 7.82784 14.0962C7.8139 14.2272 7.7742 14.3542 7.71103 14.4699C7.64786 14.5855 7.56245 14.6875 7.45972 14.77C7.3569 14.8616 7.23628 14.931 7.1054 14.9738C6.97453 15.0166 6.83623 15.0319 6.69917 15.0187C6.5621 15.0056 6.42923 14.9643 6.30887 14.8974C6.18852 14.8305 6.08327 14.7395 5.99972 14.63L1.16972 8.63003C1.04421 8.44495 0.984354 8.22313 0.999724 8.00003Z\"\n          fill=\"#64616B\"\n        />\n      </svg>\n    </SvgBox>\n  );\n}\n\nexport default Arrow;\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Switch, Route, NavLink, Redirect, useHistory } from 'react-router-dom'\n\nimport MainContainer from '../../Containers/MainContainer'\nimport AccountSettings from '../SettingsAccount'\nimport SettingsPayment from '../SettingsPayment'\nimport SettingsReskin from '../SettingsReskin'\n\nimport Arrow from '../../Components/svg/Arrow'\n\nimport authOperations from '../../redux/auth/auth-operations'\n\nimport styles from './SettingsPage.module.css'\nimport routes from '../../routes'\n\nfunction SettingsPage() {\n  let history = useHistory()\n\n  const handleGoBack = event => {\n    event.preventDefault()\n    history.push(routes.partnerArea)\n  }\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(authOperations.getSettingsInfo())\n  }, [dispatch])\n\n  return (\n    <MainContainer>\n      <button onClick={handleGoBack} className={styles.goBackBtn}>\n        <Arrow />\n        Back to main page\n      </button>\n      <div className={styles.title}>Settings</div>\n      <div className={styles.buttonsBlock}>\n        <NavLink\n          to={routes.settingsAccount}\n          className={styles.buttonControl}\n          activeClassName={styles.activeButton}\n        >\n          Account\n        </NavLink>\n        <NavLink\n          to={routes.settingsPayment}\n          className={styles.buttonControl}\n          activeClassName={styles.activeButton}\n        >\n          Payment\n        </NavLink>\n        <NavLink\n          to={routes.settingsReskin}\n          className={styles.buttonControl}\n          activeClassName={styles.activeButton}\n        >\n          Reskin\n        </NavLink>\n      </div>\n      <Switch>\n        <Route path={routes.settingsAccount} component={AccountSettings} />\n        <Route path={routes.settingsPayment} component={SettingsPayment} />\n        <Route path={routes.settingsReskin} component={SettingsReskin} />\n        <Redirect to={routes.settingsAccount} />\n      </Switch>\n    </MainContainer>\n  )\n}\n\nexport default SettingsPage\n\n/*\n              <NavLink\n                to={routes.settingsAccount}\n                className={styles.navLink}\n                activeClassName={styles.activeLink}\n              >\n                Account\n              </NavLink>\n              <NavLink\n                to={routes.settingsPayment}\n                className={styles.navLink}\n                activeClassName={styles.activeLink}\n              >\n                Payment\n              </NavLink>\n              <NavLink\n                to={routes.settingsReskin}\n                className={styles.navLink}\n                activeClassName={styles.activeLink}\n              >\n                Reskin\n              </NavLink>\n\n*/\n"],"sourceRoot":""}